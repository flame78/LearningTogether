@model LearningTogether.Web.ViewModels.ExternalItems.ExternalItemUpdateModel

@Html.ValidationSummary("", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control full-width" } })
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Link, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.EditorFor(m => m.Link, new { htmlAttributes = new { @class = "form-control full-width" } })
        @Html.ValidationMessageFor(m => m.Link, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Type, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.EditorFor(m => m.Type, new { htmlAttributes = new { @class = "form-control full-width" } })
        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    <label class="col-md-2 control-label" for="categoryId">Category</label>
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.CategoryId, (List<SelectListItem>)ViewBag.Categories, new { id="categoryId"} )
        @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.Label("Screenshot", new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        <input type="file" name="file" />
    </div>
</div>
