@using System.Web.Script.Serialization
@using LearningTogether.Data.Models
@using LearningTogether.Web.Areas.Administration
@using LearningTogether.Web.Areas.Administration.Models
@using LearningTogether.Web.Areas.Administration.Models.Users

@section styles
{
    @Styles.Render("~/Content/kendo")
}
<br />

<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" width="854" height="480" src="https://www.youtube.com/embed/pNCdXt1MXps" frameborder="0" allowfullscreen></iframe>
</div>


@(Html.Kendo().Grid<UserViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Email);
          columns.Bound(c => c.Roles).ClientTemplate("#=showRoles(Roles)#").HeaderTemplate(@<text>Roles</text>);
          columns.Bound(c => c.Id).ClientTemplate("<a class='k-button k-button-icontext' href='/Administration/Users/Edit/#=Id#'><span class='k-icon k-edit' ></span>Edit</a>").Width(90);
          columns.Command(command => { command.Destroy(); }).Width(100);
      })
      .ToolBar(toolbar =>
      {
      toolbar.Template("<a class='btn btn-default' href='/Administration/Users/Create'><span class='glyphicon glyphicon-plus-sign'></span> Create</a>");
      })
      .Pageable()
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Filterable()
      .Scrollable(scrollable => scrollable.Enabled(false))
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("Users_Read", "Users"))
          .Destroy(destroy => destroy.Action("Users_Destroy", "Users"))
      )
)

@section scripts
{
    <script type="text/javascript">
        var showRoles = (function (rolesIds) {
            var roles;
            $.getJSON('/Administration/Users/Roles', function (data) {
                roles = data;
            });

            return function (rolesIds) {

                var result = "";
                rolesIds.forEach(function (id) {
                    result += ("<p>" + roles[id] + "</p>");
                }, this);
                return result;
            };
        })();
    </script>
    @Scripts.Render("~/bundles/kendo")

}